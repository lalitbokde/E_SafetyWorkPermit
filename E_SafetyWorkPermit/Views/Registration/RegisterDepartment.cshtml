@model E_SafetyWorkPermit.Models.DepartmentRegistrationViewModel

@{
    ViewBag.Title = "RegisterDepartment";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}

<h2>RegisterDepartment</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="col-md-12">
                <div class="box box-default">
                    <div class="box-body">
                        <div class=" col-md-12 form-group">
                            <div class="col-md-2">
                                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                            </div>
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-12 form-group">
                            <div class="col-md-2">
                                @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "control-label col-md-2" })
                            </div>
                            <div class="col-md-4">
                                @Html.DropDownListFor(model => model.DepartmentList, new SelectList(((List<SelectListItem>)Session["DepartmentId"] != null) ? (List<SelectListItem>)Session["DepartmentId"] : new List<SelectListItem>(), "Value", "Text"), "--Select--", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.DepartmentList, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-12 form-group">
                            <div class="col-md-2">
                                @Html.LabelFor(model => model.TokenNo, htmlAttributes: new { @class = "control-label col-md-2" })
                            </div>
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.TokenNo, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.TokenNo, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-12 form-group">
                            <div class="col-md-2">
                                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                            </div>
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-12 form-group">
                            <div class="col-md-2">
                                @Html.LabelFor(model => model.Role, htmlAttributes: new { @class = "control-label col-md-2" })
                            </div>
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Role, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-12 form-group">
                            <div class="col-md-2">
                                @Html.LabelFor(model => model.CreatedDate, htmlAttributes: new { @class = "control-label col-md-2" })
                            </div>
                            <div class="col-md-4">

                                <div class="">
                                    <div class="input-group date">
                                        <div class="input-group-addon">
                                            <i class="fa fa-calendar"></i>
                                        </div>
                                        @Html.EditorFor(model => model.CreatedDate, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.CreatedDate, "", new { @class = "text-danger" })
                                    </div>
                                    <!-- /.input group -->
                                </div>

                            </div>
                        </div>

                        <div class="col-md-12 form-group">
                            <div class="col-md-2">
                                @Html.LabelFor(model => model.UpdatedDate, htmlAttributes: new { @class = "control-label col-md-2" })
                            </div>
                            <div class="col-md-4">
                                <div class="">
                                    <div class="input-group date">
                                        <div class="input-group-addon">
                                            <i class="fa fa-calendar"></i>
                                        </div>
                                        @Html.EditorFor(model => model.UpdatedDate, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.UpdatedDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Create" class="btn btn-default" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>





<script src="~/scripts/bootstrap-datetimepicker.min.js"></script>
<script src="http://code.jquery.com/ui/1.10.1/jquery-ui.js"></script>
<script>
    $.noConflict();
    jQuery(document).ready(function ($) {
        var bindDatePicker = function () {
            $(".inputTime").datetimepicker({
                format: "hh:mm A",
                icons: {
                    time: "fa fa-clock-o",
                    date: "fa fa-calendar",
                    up: "fa fa-arrow-up",
                    down: "fa fa-arrow-down"
                }

            }).find('input:first').on("blur", function () {
            });
        }
        bindDatePicker();
    });
</script>


<script type="text/javascript">

    $('#CreatedDate').datepicker({
        format: 'dd/MM/yyyy'
    });


    $('#UpdatedDate').datepicker({
        format: 'dd/MM/yyyy'
    });

</script>
